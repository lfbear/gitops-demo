# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI/CD Sample

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  golangci:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58

      - name: Test
        run: go test -v ./...

# kinds of jobs: e2e tesing, code security check ...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set Short Sha
        id: short_sha
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: lfbear/gitops-test:${{ steps.short_sha.outputs.value }}

  deploy:
  
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set Short Sha
        id: short_sha
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Modify version info
        run: sed -i "s#newTag:\ .*#newTag:\ \"${{ steps.short_sha.outputs.value }}\"#" ./clusters/my-cluster/apps/mydemo.yaml

      - name: Commit report
        run: |
          git config --local user.name 'GitOps Robot'
          git config --local user.email '<>'
          git add .
          git commit -m "ðŸ¤– ${{ github.actor }} release a new version. demo: ${{ steps.short_sha.outputs.value }}"
          git push
